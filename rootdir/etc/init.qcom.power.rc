on boot
    # Bring up CPUs
    exec - root root system -- /system/bin/init.power.sh

    # Update foreground and background cpusets
    write /dev/cpuset/top-app/cpus "0-3"
    write /dev/cpuset/foreground/cpus "0-3"
    write /dev/cpuset/foreground/boost/cpus "0-3"
    write /dev/cpuset/background/cpus "0-3"
    write /dev/cpuset/system-background/cpus "0-3"

    # Set default schedTune value for foreground/top-app
    write /dev/stune/foreground/schedtune.prefer_idle 1
    write /dev/stune/top-app/schedtune.boost 10
    write /dev/stune/top-app/schedtune.prefer_idle 1

    # Add a cpuset for the camera daemon
    # We want all cores for camera
    mkdir /dev/cpuset/camera-daemon
    write /dev/cpuset/camera-daemon/cpus "0-3"
    write /dev/cpuset/camera-daemon/mems 0
    chown system system /dev/cpuset/camera-daemon
    chown system system /dev/cpuset/camera-daemon/tasks
    chmod 0664 /dev/cpuset/camera-daemon/tasks

on enable-low-power
    # Set perfd properties
    setprop ro.min_freq_0 384000
    rm /data/system/perfd/default_values
    start perfd

    # Starting io prefetcher service
    start iop

on charger
    write /sys/devices/system/cpu/cpu1/online 0
    write /sys/devices/system/cpu/cpu2/online 0
    write /sys/devices/system/cpu/cpu3/online 0
    write /sys/module/msm_thermal/core_control/cpus_offlined 14
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor "powersave"
    write /sys/module/lpm_levels/parameters/sleep_disabled 0
    start dashd

on class_start:late_start
    trigger enable-low-power

on property:init.svc.recovery=running
    trigger enable-low-power

on property:dev.bootcomplete=1
    setprop sys.io.scheduler "cfq"

    # Update cpusets now that boot is complete and we want better load balancing
    write /dev/cpuset/top-app/cpus "0-3"
    write /dev/cpuset/foreground/boost/cpus "0-2"
    write /dev/cpuset/foreground/cpus "0-2"
    write /dev/cpuset/background/cpus 0
    write /dev/cpuset/system-background/cpus "0-2"
